==========
What’s new
==========

This topic describes new functionality and breaking changes for recently released versions of
|EMOD_l|.


.. contents:: Contents
   :local:



|EMOD_s| v2.13
==============

The |EMOD_s| v2.13 release includes many new features for all supported simulation types.

.. raw:: html

    <button class="collapse-table-button btn btn-info">Collapse all parameter tables</button>

New configuration parameters
----------------------------

.. only:: generic

    For the generic simulation type, the following new configuration parameters are available:

    .. raw:: html

        <button class="toggle-button btn btn-info">Toggle parameter table</button>

    .. rst-class:: toggle-table

    .. csv-table::
        :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
        :widths: 10, 5, 5, 5, 5, 20, 5
        :file: ../csv/213-config-generic.csv

.. only:: malaria

    For the malaria simulation type, the following new configuration parameters are available:

    .. raw:: html

        <button class="toggle-button btn btn-info">Toggle parameter table</button>

    .. rst-class:: toggle-table

    .. csv-table::
        :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
        :widths: 10, 5, 5, 5, 5, 20, 5
        :file: ../csv/213-config-malaria.csv

.. only:: hiv

    For the HIV simulation type, the following new configuration parameters are available:

    .. raw:: html

        <button class="toggle-button btn btn-info">Toggle parameter table</button>

    .. rst-class:: toggle-table

    .. csv-table::
        :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
        :widths: 10, 5, 5, 5, 5, 20, 5
        :file: ../csv/213-config-hiv.csv

.. only:: tb

    For the tuberculosis simulation type, the following new configuration parameters are available:

    .. raw:: html

        <button class="toggle-button btn btn-info">Toggle parameter table</button>

    .. rst-class:: toggle-table

    .. csv-table::
        :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
        :widths: 10, 5, 5, 5, 5, 20, 5
        :file: ../csv/213-config-tb.csv

To view all available configuration parameters, see :doc:`parameter-configuration`.


New demographics parameters
---------------------------

In all simulation types, you can now assign properties like risk or quality of care to nodes using
**NodeProperties**, which are configured much like **IndividualProperties**. In addition, a new
property type is available for both nodes and individuals called **InterventionStatus**, which is
used by the campaign file to distribute interventions based on the other interventions an individual
or node has received. This property type was previously available only for individuals in the HIV
simulation type and was known as the **CascadeState**. The relevant campaign parameters are
described in the next section.

For more information, see the table below.

.. raw:: html

    <button class="toggle-button btn btn-info">Toggle parameter table</button>

.. rst-class:: toggle-table

.. csv-table::
    :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
    :widths: 10, 5, 5, 5, 5, 20, 5
    :file: ../csv/213-demo-generic.csv

New campaign parameters
-----------------------

The addition of **NodeProperties** in the demographics file also necessitated the addition of
**Node_Property_Restrictions** to control how interventions are distributed based on the
property values assigned to each node.

The new campaign parameters **Disqualifying_Properties** and **New_Property_Value** were added to
every intervention to control how interventions are distributed based on properties assigned to
individuals or nodes. **Disqualifying_Properties** prevents an intervention from being distributed
to individuals or nodes with certain property values. **New_Property_Value** updates the property
value after they receive an intervention.

These are generally used with the the property type **InterventionStatus** to control how
interventions are distributed based on the interventions already received. For example, a household
may be ineligible for clinical treatment for a length of time if they already received treatment
during a drug campaign. This functionality was previously only available for individuals in the HIV
simulation type and used parameters previously called **Abort_States** and **Valid_Cascade_States**.

The following event coordinators and intervention classes are new for this simulation type.

CommunityHealthWorkerEventCoordinator
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The **CommunityHealthWorkerEventCoordinator** coordinator class is used to model a health care worker's ability
to distribute interventions to the nodes and individual in their coverage area. This coordinator
distributes a limited number of interventions per day, and can create a backlog of individuals or
nodes requiring the intervention. For example, individual-level interventions could be distribution
of drugs  and node-level interventions could be spraying houses with insecticide.

.. raw:: html

    <button class="toggle-button btn btn-info">Toggle parameter table</button>

.. rst-class:: toggle-table

.. csv-table::
    :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
    :widths: 10, 5, 5, 5, 5, 20, 5
    :file: ../csv/campaign-communityhealthworkereventcoordinator.csv

ImportPressure
~~~~~~~~~~~~~~

The **ImportPressure** intervention class extends the **ImportCases** outbreak event. Rather than importing a
deterministic number of cases on a scheduled day, **ImportPressure** applies a set of per-day rates
of importation of infected individuals, over a corresponding set of durations. **ImportPressure**
inherits from **Outbreak**; the **Antigen** and **Genome** parameters are defined as they are for all
**Outbreak** events.

.. raw:: html

    <button class="toggle-button btn btn-info">Toggle parameter table</button>

.. rst-class:: toggle-table


.. csv-table::
    :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
    :widths: 10, 5, 5, 5, 5, 20, 5
    :file: ../csv/campaign-importpressure.csv


IndividualImmunityChanger
~~~~~~~~~~~~~~~~~~~~~~~~~

The **IndividualImmunityChanger** intervention class acts essentially as a
:doc:`parameter-campaign-individual-multieffectvaccine`,
with the exception of how the behavior is implemented. Rather than
attaching a persistent vaccine intervention object to an individual’s intervention list (as a
campaign-individual-multieffectboostervaccine does), the **IndividualImmunityChanger** directly
alters the immune modifiers of the individual’s susceptibility object and is then immediately disposed
of. Any immune waning is not governed by :doc:`parameter-campaign-waningeffects`, as
:doc:`parameter-campaign-individual-multieffectvaccine` is, but rather
by the immunity waning parameters in the configuration file.

.. raw:: html

    <button class="toggle-button btn btn-info">Toggle parameter table</button>

.. rst-class:: toggle-table

.. csv-table::
    :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
    :widths: 10, 5, 5, 5, 5, 20, 5
    :file: ../csv/campaign-individualimmunitychanger.csv



MultiEffectBoosterVaccine
~~~~~~~~~~~~~~~~~~~~~~~~~

The **MultiEffectBoosterVaccine** intervention class is derived from **MultiEffectVaccine** and
preserves many of the same parameters. Upon distribution and successful take, the vaccine’s effect
in each immunity compartment (acquisition, transmission,  and mortality) is determined by the
recipient’s immune state. If the recipient’s immunity modifier in the corresponding compartment is
above a user-specified threshold, then the vaccine’s initial effect will be equal to the
corresponding priming parameter. If the recipient’s immune modifier is below this threshold, then
the vaccine’s initial effect will be equal to the corresponding boost parameter. After distribution,
the effect wanes, just like a :doc:`parameter-campaign-individual-multieffectvaccine`. The behavior
is intended to mimic biological priming and boosting.

.. raw:: html

    <button class="toggle-button btn btn-info">Toggle parameter table</button>

.. rst-class:: toggle-table

.. csv-table::
    :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
    :widths: 10, 5, 5, 5, 5, 20, 5
    :file: ../csv/campaign-multieffectboostervaccine.csv


NodePropertyValueChanger
~~~~~~~~~~~~~~~~~~~~~~~~

The **NodePropertyValueChanger** intervention class sets a given node property to a new value. You can
also define a duration in days before the node property reverts back to its original value, the
probability that a node will change its node property to the target value, and the number of days
over which nodes will attempt to change their individual properties to the target value. This
node-level intervention functions in a similar manner as the individual-level intervention,
:doc:`parameter-campaign-individual-propertyvaluechanger`.

.. raw:: html

    <button class="toggle-button btn btn-info">Toggle parameter table</button>

.. rst-class:: toggle-table


.. csv-table::
    :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
    :widths: 10, 5, 5, 5, 5, 20, 5
    :file: ../csv/campaign-nodepropertyvaluechanger.csv

SimpleBoosterVaccine
~~~~~~~~~~~~~~~~~~~~

The **SimpleBoosterVaccine** intervention class is derived from :doc:`parameter-campaign-individual-simplevaccine`
and preserves many of the same parameters. The behavior is much like **SimpleVaccine**, except that upon distribution
and successful take, the vaccine's effect is determined by the recipient's immune state. If the
recipient’s immunity modifier in the corresponding channel (acquisition, transmission, or mortality) is
above a user-specified threshold, then the vaccine’s initial effect will be equal to the
corresponding priming parameter. If the recipient’s immune modifier is below this threshold, then
the vaccine's initial effect will be equal to the corresponding boosting parameter. After
distribution, the effect wanes, just like **SimpleVaccine**. In essence, this intervention
provides a **SimpleVaccine** intervention with one effect to all naive (below- threshold)
individuals, and another effect to all primed (above-threshold) individuals; this behavior is
intended to mimic biological priming and boosting.

.. raw:: html

    <button class="toggle-button btn btn-info">Toggle parameter table</button>

.. rst-class:: toggle-table


.. csv-table::
    :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
    :widths: 10, 5, 5, 5, 5, 20, 5
    :file: ../csv/campaign-simpleboostervaccine.csv


.. only:: malaria


    UsageDependentBednet
    ~~~~~~~~~~~~~~~~~~~~

    The **UsageDependentBednet** intervention class is similar to **SimpleBednet**, as it
    distributes insecticide-treated nets to individuals in the simulation. However, bednet ownership
    and bednet usage are distinct in this intervention. As in **SimpleBednet**, net ownership is
    configured through the demographic coverage, and the blocking and killing rates of mosquitoes
    are time-dependent. Use of bednets is age-dependent and can vary seasonally. Once a net has
    been distributed to someone, the net usage is determined by the product of the seasonal and
    age-dependent usage probabilities until the net-retention counter runs out, and the net is
    discarded.

    .. raw:: html

        <button class="toggle-button btn btn-info">Toggle parameter table</button>

    .. rst-class:: toggle-table

    .. csv-table::
        :header: Parameter, Data type, Minimum, Maximum, Default, Description, Example
        :widths: 10, 5, 5, 5, 5, 20, 5
        :file: ../csv/campaign-usagedependentbednet.csv



|EMOD_s| v2.10
==============

The |EMOD_s| v2.10 release includes new and updated malaria configuration, demographic, and
intervention parameters. With this release, |EMOD_s| now uses |VS_2015|, |Boost_161|, and |Scons_25|.


|EMOD_s| software upgrades
--------------------------

Microsoft Visual Studio
    |EMOD_s| now uses |VS_2015|, and |VS_2012| is no longer supported. The Visual Studio solution
    file in the |EMOD_s| source, EradicationKernel, has been updated for |VS_2015|. If you have
    custom reporter EMODules (DLLS) that were built using |VS_2012|, you will need to rebuild them
    with |VS_2015|; otherwise, your simulation will crash when it attempts to load the DLLs built
    by |VS_2012|.

Boost
    |EMOD_s| now supports using |Boost_161|. If you continue to use |Boost_151|, you will get the
    following warning, "Unknown compiler version - please run the configure tests and report the
    results."

Environment variables
    To make it easier to use Boost and Python with Visual Studio, |IDM_s| paths have been created.
    These two paths, IDM_BOOST_PATH and IDM_PYTHON_PATH, need to be added to your  environment
    variables by using either the **setx** command from a command line or the Windows System
    Properties panel.

SCons
    |EMOD_s| was tested using |Scons_25|, as it supports |VS_2015|. If you do not add the new
    |IDM_s| environment variables for Boost and Python, you will need to modify the Boost and
    Python paths in the SConstruct file in the |EMOD_s| root directory.


Python
    |EMOD_s| was tested with Python 2.7.11 and 2.7.12. If you are building the |exe_l| and have
    an earlier version of Python (for example, 2.7.2), you will see the following warning message on some
    files, "c:\python27\include\pymath.h(22): warning C4273: 'round': inconsistent dll linkage."
    Upgrade to Python 2.7.11 or 2.7.12 to get rid of the warning message.

For more information, see :doc:`dev-install-prerequisites`.



